dataloader:
  evaluator: {_target_: detectron2.evaluation.COCOEvaluator, dataset_name: '${..test.dataset.names}'}
  test:
    _target_: detectron2.data.build_detection_test_loader
    dataset: {_target_: detectron2.data.get_detection_dataset_dicts, filter_empty: false, names: coco_2017_val}
    mapper:
      _target_: detrex.data.DetrDatasetMapper
      augmentation:
      - {_target_: detectron2.data.transforms.ResizeShortestEdge, max_size: 1333, short_edge_length: 800}
      augmentation_with_crop: null
      img_format: RGB
      is_train: false
      mask_on: false
    num_workers: 4
  train:
    _target_: detectron2.data.build_detection_train_loader
    dataset: {_target_: detectron2.data.get_detection_dataset_dicts, names: coco_2017_train}
    mapper:
      _target_: detrex.data.DetrDatasetMapper
      augmentation:
      - {_target_: detectron2.data.transforms.RandomFlip}
      - _target_: detectron2.data.transforms.ResizeShortestEdge
        max_size: 1333
        sample_style: choice
        short_edge_length: [480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800]
      augmentation_with_crop:
      - {_target_: detectron2.data.transforms.RandomFlip}
      - _target_: detectron2.data.transforms.ResizeShortestEdge
        sample_style: choice
        short_edge_length: [400, 500, 600]
      - _target_: detectron2.data.transforms.RandomCrop
        crop_size: [384, 600]
        crop_type: absolute_range
      - _target_: detectron2.data.transforms.ResizeShortestEdge
        max_size: 1333
        sample_style: choice
        short_edge_length: [480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800]
      img_format: RGB
      is_train: true
      mask_on: false
    num_workers: 16
    total_batch_size: 16
lr_multiplier:
  _target_: detectron2.solver.WarmupParamScheduler
  scheduler:
    _target_: fvcore.common.param_scheduler.MultiStepParamScheduler
    milestones: [300000, 375000]
    values: [1.0, 0.1]
  warmup_factor: 0.001
  warmup_length: 0.0
  warmup_method: linear
model:
  _target_: projects.h_deformable_detr.modeling.DeformableDETR
  as_two_stage: true
  aux_loss: true
  backbone:
    _target_: detectron2.modeling.ResNet
    freeze_at: 1
    out_features: [res3, res4, res5]
    stages: {_target_: detectron2.modeling.ResNet.make_default_stages, depth: 50, norm: FrozenBN, stride_in_1x1: false}
    stem: {_target_: detectron2.modeling.backbone.BasicStem, in_channels: 3, norm: FrozenBN, out_channels: 64}
  criterion:
    _target_: projects.h_deformable_detr.modeling.DeformableCriterion
    alpha: 0.25
    gamma: 2.0
    loss_class_type: focal_loss
    matcher: {_target_: detrex.modeling.HungarianMatcher, alpha: 0.25, cost_bbox: 5.0, cost_class: 2.0, cost_class_type: focal_loss_cost, cost_giou: 2.0, gamma: 2.0}
    num_classes: 80
    weight_dict: {loss_bbox: 5.0, loss_bbox_0: 5.0, loss_bbox_1: 5.0, loss_bbox_2: 5.0, loss_bbox_3: 5.0, loss_bbox_4: 5.0, loss_bbox_enc: 5.0, loss_class: 1, loss_class_0: 1, loss_class_1: 1, loss_class_2: 1, loss_class_3: 1, loss_class_4: 1, loss_class_enc: 1, loss_giou: 2.0, loss_giou_0: 2.0, loss_giou_1: 2.0, loss_giou_2: 2.0, loss_giou_3: 2.0, loss_giou_4: 2.0, loss_giou_enc: 2.0}
  device: cuda
  embed_dim: 256
  k_one2many: 6
  lambda_one2many: 1.0
  mixed_selection: true
  neck:
    _target_: detrex.modeling.ChannelMapper
    in_features: [res3, res4, res5]
    input_shapes:
      res3: !!python/object:detectron2.layers.shape_spec.ShapeSpec {channels: 512, height: null, stride: null, width: null}
      res4: !!python/object:detectron2.layers.shape_spec.ShapeSpec {channels: 1024, height: null, stride: null, width: null}
      res5: !!python/object:detectron2.layers.shape_spec.ShapeSpec {channels: 2048, height: null, stride: null, width: null}
    kernel_size: 1
    norm_layer: {_target_: torch.nn.GroupNorm, num_channels: 256, num_groups: 32}
    num_outs: 4
    out_channels: 256
  num_classes: 80
  num_queries_one2many: 1500
  num_queries_one2one: 300
  pixel_mean: [123.675, 116.28, 103.53]
  pixel_std: [58.395, 57.12, 57.375]
  position_embedding: {_target_: detrex.layers.PositionEmbeddingSine, normalize: true, num_pos_feats: 128, offset: -0.5, temperature: 10000}
  select_box_nums_for_evaluation: 300
  transformer:
    _target_: projects.h_deformable_detr.modeling.DeformableDetrTransformer
    as_two_stage: ${..as_two_stage}
    decoder: {_target_: projects.h_deformable_detr.modeling.DeformableDetrTransformerDecoder, attn_dropout: 0.0, embed_dim: 256, feedforward_dim: 2048, ffn_dropout: 0.0, look_forward_twice: true, num_feature_levels: '${..num_feature_levels}', num_heads: 8, num_layers: 6, return_intermediate: true}
    encoder: {_target_: projects.h_deformable_detr.modeling.DeformableDetrTransformerEncoder, attn_dropout: 0.0, embed_dim: 256, feedforward_dim: 2048, ffn_dropout: 0.0, num_feature_levels: '${..num_feature_levels}', num_heads: 8, num_layers: 6, post_norm: false}
    mixed_selection: true
    num_feature_levels: 4
    two_stage_num_proposals: ${..num_queries_one2one}+${..num_queries_one2many}
  with_box_refine: true
optimizer:
  _target_: torch.optim.AdamW
  betas: [0.9, 0.999]
  lr: 0.0001
  params: {_target_: detectron2.solver.get_default_optimizer_params, base_lr: '${..lr}', lr_factor_func: !!python/name:None.%3Clambda%3E '', weight_decay_norm: 0.0}
  weight_decay: 0.0001
train:
  amp: {enabled: false}
  checkpointer: {max_to_keep: 100, period: 5000}
  clip_grad:
    enabled: false
    params: {max_norm: 0.1, norm_type: 2}
  ddp: {broadcast_buffers: false, find_unused_parameters: false, fp16_compression: false}
  device: cuda
  eval_period: 5000
  fast_dev_run: {enabled: false}
  init_checkpoint: /openseg_blob_new/jiading/code/detrex-series/detrex/ckpts/after_convert/h_deformable_detr/r50_hybrid_branch_lambda1_group6_t1500_dp0_mqs_lft_deformable_detr_plus_iterative_bbox_refinement_plus_plus_two_stage_36eps.pth
  log_period: 20
  max_iter: 375000
  output_dir: ./output/deformable_detr_r50_two_stage_50ep
